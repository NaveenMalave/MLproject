# -*- coding: utf-8 -*-
"""Copy of minor_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nMYlh5qC2BT0aJ3Qj0GwDJhAlqwMPHRt

VERZEO
                              MINOR PROJECT

PROJECT NAME:
MACHINE LEARNING JUNE MINOR PROJECT

PROJECT DESCRIPTION

perform classification analysis to predict how mant people survived the titanic disaster using logestic regression for given data

LOGISTIC REGESSION

 Logistic regression estimates the probability of an event occurring, such as voted or didnâ€™t vote, based on a given dataset of independent variables. Since the outcome is a probability, the dependent variable is bounded between 0 and 1.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.impute import SimpleImputer
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.linear_model import LogisticRegression
from xgboost import XGBClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.neighbors import KNeighborsClassifier
import warnings
warnings.filterwarnings("ignore")

pip install pandas

import pandas as pd

pwd

# To import the training data
train_data = pd.read_csv('/content/train.csv')
train_data.head()

import pandas as pd 
# https://www.kaggle.com/competitions/titanic/data?select=train.csv

df = pd.read_csv("/train.csv")
df

df.info()

df.isnull().sum()

df = df.dropna()   
df

"""PLOT VISUALS BY USING MATPLOTLIB/SEABORN DATA VISUALIZATION"""

# To check the missing data using seaborn
import seaborn as sns

sns.heatmap(train_data.isnull(), yticklabels=False, cbar=False, cmap='viridis')

# To count the survived and didn't survived
sns.countplot(data=train_data, x='Survived')

# To see the gender distribution of survived and didn't survived
sns.countplot(data=train_data, x='Survived', hue='Sex')



# To check same data as above but as per the ticket class
sns.countplot(data=train_data, x='Survived', hue='Pclass')

from sklearn.linear_model import LinearRegression

model = LinearRegression()

# To train and predict
from sklearn.linear_model import LogisticRegression

log_reg_model = LogisticRegression()
log_reg_model.fit(X_train, Y_train)

# Train/Test split
from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(train_data.drop('Survived',axis=1), train_data['Survived'], test_size=0.2, random_state=42)

# Train/Test split
from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(train_data.drop('Survived',axis=1), train_data['Survived'], test_size=0.2, random_state=42)

# To train and predict
from sklearn.linear_model import LogisticRegression

log_reg_model = LogisticRegression()
log_reg_model.fit(X_train, Y_train)

import matplotlib.pyplot as plt

plt.scatter(data=train_data, x='Survived' )
plt.plot(data=train_data, x='Survived' )
plt.show()